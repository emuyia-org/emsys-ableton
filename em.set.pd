#N canvas 1440 928 1920 976 12;
#X floatatom 1021 759 5 0 0 0 - - - 0;
#X floatatom 1074 760 5 0 0 0 - - - 0;
#X floatatom 1120 760 5 0 0 0 - - - 0;
#X floatatom 1164 729 5 0 0 0 - - - 0;
#X floatatom 1211 729 5 0 0 0 - - - 0;
#X floatatom 926 760 5 0 0 0 - - - 0;
#X floatatom 972 760 5 0 0 0 - - - 0;
#X obj 946 708 bank2pgm;
#X obj 1021 710 bank2pgm;
#X floatatom 1259 729 5 0 0 0 - - - 0;
#X obj 1030 595 list trim;
#X obj 1057 582 list split 2;
#X obj 1122 613 list;
#X obj 1057 533 text get set;
#X floatatom 1057 485 5 0 0 0 - - - 0;
#X obj 1017 421 counter, f 11;
#X obj 1122 465 del 50;
#X obj 1108 385 t;
#X obj 1108 336 bng 20 250 50 0 empty empty reset 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1366 200 r s.reset;
#X obj 1249 359 text size set;
#X obj 1285 500 i;
#X obj 1216 421 ==;
#X obj 1214 421 sel 1;
#X obj 1195 152 t;
#X msg 1195 201 stop;
#X obj 1235 176 loadmess 0;
#X obj 1235 225 s s.hold;
#X obj 1107 226 onebang;
#X obj 1107 177 r t.load;
#X obj 1015 176 r s.hold;
#X obj 1015 225 == 0;
#X obj 1015 274 gate 1;
#X obj 1036 304 t;
#X obj 1045 379 bng 20 250 50 0 empty empty cont 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 912 485 s s.do_pgm_out;
#X text 1064 84 only let set continue after the last rep of the current segment, f 22;
#X text 927 175 if on hold \, dont let the set continue to the next segment, f 11;
#X text 1285 378 once counter reaches max (size of set text) \, force counter to loop at current segment, f 17;
#X text 1154 511 this splits up the segment data into pairs so they can be routed, f 15;
#X obj 536 543 sel 0;
#X obj 752 515 + 1;
#X obj 749 576 s s.current_seg_id;
#X obj 613 576 text get set;
#X obj 749 625 s s.current_seg_data;
#X obj 613 625 s s.next_seg_data;
#X obj 536 592 s s.start;
#X obj 645 176 r t.stop;
#X msg 645 225 1;
#X msg 714 225 0;
#X obj 714 176 r t.4n;
#X obj 675 254 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 675 303 + 1;
#X obj 675 352 gate 2;
#X obj 704 379 b;
#X msg 593 421 0;
#X obj 550 465 s s.hold;
#X obj 750 294 - 1;
#X obj 620 465 s tin.toggle;
#X obj 704 428 del 100;
#X obj 763 219 r s.seek_seg;
#X text 852 378 send pgm out on the load of the last rep of the current segment. or on reset \, or 100ms after manually seeking to a seg, f 22;
#X text 761 154 lets user seek to a specific seg \, with a 250 pipe to buff out spamming value changes, f 23;
#X text 470 276 if we seek a seg \, & we're live \, turn off hold & tin \, and queue up seg change at counter. if we're stopped \, don't worry about hold & tin as their states are inconsequential \, and set counter output immediately, f 28;
#X text 391 514 sending out data about the current & next seg \, and if the set is at the start, f 19;
#X obj 926 808 f;
#X obj 972 808 f;
#X obj 1024 833 f;
#X obj 1068 833 f;
#X obj 1123 833 f;
#X obj 1164 826 f;
#X obj 1211 826 f;
#X obj 1268 833 f;
#X obj 815 729 r s.do_pgm_out;
#X obj 896 760 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1164 777 sel 0;
#X obj 1211 777 sel 0;
#X obj 1259 777 change;
#X obj 783 854 s s.md_pgm_change;
#X obj 864 874 s s.mnm_pgm_change;
#X obj 783 903 change;
#X obj 864 923 change;
#X obj 1024 882 s s.seg_reps;
#X obj 1024 931 s s.loop_len;
#X obj 1123 931 s s.seg_bpm_target;
#X obj 1261 908 s s.seg_poly;
#X obj 1123 882 s s.seg_tin;
#X obj 1211 875 s s.seg_bpm_rtime;
#X obj 254 647 loadmess 0;
#X obj 333 647 r s.hold;
#X obj 254 696 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 254 745 t b f f;
#X obj 228 760 == 0;
#X obj 254 809 gate 0;
#X obj 433 854 gate 1;
#X obj 327 760 == 0;
#X obj 327 809 sel 0;
#X obj 482 760 r t.beat1;
#X obj 482 809 onebang;
#X obj 564 760 r s.start;
#X obj 641 760 r t.downbeat;
#X obj 472 947 counter 0 0 3;
#X obj 528 1018 s s.current_rep;
#X obj 610 931 r s.seg_reps;
#X obj 610 980 - 1;
#X obj 496 874 r s.seek_rep;
#X msg 496 923 set \$1;
#X obj 493 1046 sel 0;
#X obj 493 1095 s s.first_rep;
#X text 639 853 reset rep counter each time new segment data is loaded, f 17;
#X text 510 706 only let rep counter advance after a downbeat \, or after the set has just been started, f 29;
#X floatatom 206 729 5 0 0 0 - - - 0;
#X obj 1107 128 r s.last_rep;
#X text 105 728 if hold is on \, and we're on the last rep \, don't advance the rep counter further., f 16;
#X text 366 728 when hold is turned off \, open gate up again to allow rep advancement, f 14;
#X text 493 984 rep (repetition) counter, f 17;
#X obj 236 874 r t.beat1;
#X obj 236 923 del 50;
#X obj 236 972 f;
#X obj 236 1021 sel 3;
#X obj 279 947 r s.seg_reps;
#X obj 279 996 - 1;
#X obj 236 1070 s s.last_rep;
#X text 80 909 send out that it's the last rep \, but wait a little before spreading the word incase it's acted on too early, f 21;
#X msg 1295 1099 240 0 32 60 3 0 113 32 \$1 247;
#X text 1396 1074 mnm poly sysex;
#X obj 355 1058 < 1;
#X obj 354 1058 sel 1;
#X msg 354 1107 set -1;
#X obj 354 1156 change;
#X obj 354 1205 sel 0;
#X obj 354 1254 onebang;
#X obj 272 1135 r s.reset;
#X msg 272 1184 stop;
#X obj 1179 595 sel 2;
#X obj 1238 620 s s.end;
#X obj 410 1196 r s.end;
#X msg 354 1303 end reached;
#X obj 423 1352 print s;
#X obj 273 1259 s t.stop;
#X text 164 1258 optional: stop transport at end of set automatically, f 14;
#X text 143 1134 reset onebang status (and thereby 'end of set' status) when set is reset, f 17;
#X text 410 1104 hack: if last segment has only 1 rep \, make sure we still detect the end of the set by setting [change] to -1, f 29;
#X text 1252 947 segment data key: - md & mnm: pgms to load on mnm & md synths - rep: how many times to repeat the segment - len: the loop length of the segment - tin: whether to jumpstart the transport at the end of the segment \, either to interrupt a md/mnm pattern with an misaligned scale length \, or to fix clock desync issues - bpm: target bpm for current seg to ramp up to - bpmr: ramp time of the bpm target (s) - poly: whether to activate mnm poly mode, f 81;
#X obj 610 833 r s.current_seg_data;
#X obj 610 882 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1316 485 s s.num_of_segs;
#X floatatom 400 1018 5 0 0 0 - - - 0;
#X obj 1122 514 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 442 1058 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 952 958 s s.seg_reps_lookahead;
#X text 3100 832 comment;
#X obj 1020 1018 s s.seg_tin_lookahead;
#X obj 987 985 s s.loop_len_lookahead;
#X obj 1060 1056 s s.seg_bpm_target_lookahead;
#X obj 1024 1091 s s.seg_bpm_rtime_lookahead;
#X obj 1074 1125 s s.seg_poly_lookahead;
#X obj 1038 910 s t.length;
#X obj 1297 1064 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X floatatom 737 929 5 0 0 0 - - - 0;
#X obj 739 966 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 782 952 pgmout 31;
#X floatatom 823 988 5 0 0 0 - - - 0;
#X obj 864 972 pgmout 64;
#X obj 1295 1148 midiout 4;
#X floatatom 766 330 5 0 0 0 - - - 0;
#X obj 579 201 loadbang;
#X obj 1372 911 s s.seg_midiseq_id;
#X obj 1393 878 s s.seg_midiseq_dest;
#X text 746 1606 comment;
#X obj 1030 644 route md mnm rep len tin bpm bpmr poly seq seqto;
#X floatatom 1292 691 5 0 0 0 - - - 0;
#X obj 1381 839 symbol;
#X obj 1310 735 change;
#X obj 1321 841 f;
#X obj 1386 800 tosymbol;
#X obj 1455 806 r t.interrupt;
#X obj 1463 767 r s.reset;
#X obj 1555 800 s t.tempo;
#X obj 1558 766 once;
#X obj 736 1089 r s.seg_bpm_target_lookahead;
#X obj 724 1149 onebang;
#X obj 800 1056 r s.reset;
#X obj 724 1180 i;
#X obj 729 1117 t b f;
#X obj 721 1216 s t.tempo;
#X obj 1465 398 r s.reload;
#X obj 1377 604 s tin.toggle;
#X msg 1369 568 1;
#X obj 751 258 i;
#X obj 862 222 r s.current_seg_id;
#X obj 1539 576 s s.seek_seg;
#X floatatom 1490 520 5 0 0 0 - - - 0;
#X obj 1485 606 s ctl.update_text;
#X obj 1478 550 t b f;
#X obj 1479 578 del 50;
#X obj 1555 403 r s.current_seg_id;
#X obj 1483 475 i;
#X obj 1457 434 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X floatatom 1506 440 5 0 0 0 - - - 0;
#X obj 1965 647 text set set;
#X obj 1838 595 s s.save;
#X floatatom 2010 549 5 0 0 0 - - - 0;
#X floatatom 2057 549 5 0 0 0 - - - 0;
#X obj 1986 246 route md mnm rep len tin bpm bpmr poly seq seqto;
#X obj 1985 203 r s.write_seg_data;
#X obj 1757 595 s s.reload;
#X obj 1759 561 del 50;
#X msg 2064 287 \$1 5;
#X msg 2107 288 \$1 7;
#X msg 2151 286 \$1 9;
#X msg 2196 288 \$1 11;
#X msg 2241 286 \$1 13;
#X msg 2288 285 \$1 15;
#X msg 2339 286 \$1 17;
#X msg 2384 288 \$1 19;
#X obj 741 698 s s.seg_mnm_bank_lookahead;
#X obj 743 676 s s.seg_md_bank_lookahead;
#X msg 1882 529 stop;
#X obj 1855 492 b;
#X obj 1856 560 del 25;
#X obj 2093 395 r s.current_seg_id;
#X obj 2093 431 - 1;
#X obj 1966 441 t b a;
#X msg 1980 312 1;
#X msg 2028 308 3;
#X obj 1959 277 t a b;
#X obj 2009 276 t a b;
#X obj 1933 518 tosymbol;
#X obj 2001 378 unpack f f;
#X obj 1987 487 t b f;
#X floatatom 1958 550 5 0 0 0 - - - 0;
#X obj 1702 772 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1334 1055 r s.poly;
#X obj 857 324 r ctl.shift_state;
#X obj 784 442 buddy;
#X obj 831 353 sel 0;
#X obj 351 396 s tin.tinning;
#X obj 246 331 del 50;
#X obj 352 365 del 1000;
#X obj 339 325 s tin.toggle;
#X msg 331 289 1;
#X obj 321 215 r s.seek_seg;
#X obj 324 251 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X text 139 262 extra seek_seg checks;
#X obj 1403 677 r s.first_rep;
#X obj 1328 770 r s.push_seg_data;
#X obj 1401 716 s s.push_seg_data;
#X obj 203 370 s s.push_seg_data;
#X obj 219 444 s s.seek_rep;
#X obj 1263 40 r s.seek_rep;
#X obj 1267 77 onebang;
#X msg 1269 113 stop;
#X msg 236 412 1;
#X connect 0 0 67 1;
#X connect 0 0 150 0;
#X connect 1 0 68 1;
#X connect 1 0 153 0;
#X connect 2 0 69 1;
#X connect 2 0 152 0;
#X connect 3 0 75 0;
#X connect 3 0 154 0;
#X connect 3 0 179 0;
#X connect 4 0 155 0;
#X connect 4 0 76 0;
#X connect 5 0 65 1;
#X connect 6 0 66 1;
#X connect 7 0 5 0;
#X connect 8 0 6 0;
#X connect 9 0 77 0;
#X connect 9 0 156 0;
#X connect 10 0 170 0;
#X connect 11 0 10 0;
#X connect 11 1 12 0;
#X connect 12 0 11 0;
#X connect 13 0 11 0;
#X connect 13 0 44 0;
#X connect 13 1 134 0;
#X connect 14 0 13 0;
#X connect 14 0 40 0;
#X connect 14 0 41 0;
#X connect 15 0 14 0;
#X connect 15 0 22 0;
#X connect 16 0 14 0;
#X connect 16 0 35 0;
#X connect 17 0 16 0;
#X connect 17 1 15 3;
#X connect 18 0 17 0;
#X connect 19 0 20 0;
#X connect 19 0 18 0;
#X connect 19 0 24 0;
#X connect 20 0 21 1;
#X connect 20 0 22 1;
#X connect 20 0 146 0;
#X connect 21 0 15 2;
#X connect 22 0 23 0;
#X connect 23 0 21 0;
#X connect 24 0 25 0;
#X connect 24 1 26 0;
#X connect 25 0 28 0;
#X connect 26 0 27 0;
#X connect 28 0 32 1;
#X connect 29 0 28 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 33 0 35 0;
#X connect 33 1 34 0;
#X connect 34 0 15 0;
#X connect 40 0 46 0;
#X connect 41 0 42 0;
#X connect 41 0 43 0;
#X connect 43 0 45 0;
#X connect 47 0 48 0;
#X connect 48 0 51 0;
#X connect 49 0 51 0;
#X connect 50 0 49 0;
#X connect 51 0 52 0;
#X connect 52 0 53 0;
#X connect 53 0 15 2;
#X connect 53 1 54 0;
#X connect 53 1 15 3;
#X connect 54 0 55 0;
#X connect 54 0 59 0;
#X connect 55 0 56 0;
#X connect 55 0 58 0;
#X connect 57 0 53 1;
#X connect 57 0 165 0;
#X connect 59 0 235 0;
#X connect 60 0 189 0;
#X connect 65 0 78 0;
#X connect 65 0 80 0;
#X connect 66 0 79 0;
#X connect 66 0 81 0;
#X connect 67 0 82 0;
#X connect 68 0 83 0;
#X connect 68 0 157 0;
#X connect 69 0 86 0;
#X connect 70 0 84 0;
#X connect 71 0 87 0;
#X connect 72 0 85 0;
#X connect 72 0 158 0;
#X connect 73 0 74 0;
#X connect 74 0 65 0;
#X connect 74 0 66 0;
#X connect 75 1 70 1;
#X connect 76 1 71 1;
#X connect 77 0 72 1;
#X connect 80 0 161 0;
#X connect 81 0 163 0;
#X connect 88 0 90 0;
#X connect 89 0 90 0;
#X connect 90 0 91 0;
#X connect 91 0 92 0;
#X connect 91 1 95 0;
#X connect 91 2 93 0;
#X connect 92 0 93 1;
#X connect 93 0 94 0;
#X connect 94 0 101 0;
#X connect 95 0 96 0;
#X connect 96 1 94 0;
#X connect 97 0 98 0;
#X connect 98 0 94 1;
#X connect 99 0 98 1;
#X connect 100 0 98 1;
#X connect 101 0 102 0;
#X connect 101 0 107 0;
#X connect 101 0 118 1;
#X connect 101 0 129 0;
#X connect 101 0 147 0;
#X connect 101 0 149 0;
#X connect 101 2 111 0;
#X connect 103 0 104 0;
#X connect 104 0 101 4;
#X connect 105 0 106 0;
#X connect 106 0 101 0;
#X connect 107 0 108 0;
#X connect 111 0 92 0;
#X connect 112 0 28 1;
#X connect 112 0 251 1;
#X connect 116 0 117 0;
#X connect 117 0 118 0;
#X connect 118 0 119 0;
#X connect 119 0 122 0;
#X connect 120 0 121 0;
#X connect 121 0 119 1;
#X connect 121 0 126 0;
#X connect 124 0 164 0;
#X connect 126 0 127 0;
#X connect 127 0 128 0;
#X connect 128 0 129 0;
#X connect 129 0 130 0;
#X connect 130 0 131 0;
#X connect 131 0 137 0;
#X connect 132 0 133 0;
#X connect 133 0 131 0;
#X connect 134 0 135 0;
#X connect 136 0 131 1;
#X connect 137 0 138 0;
#X connect 144 0 145 0;
#X connect 145 0 101 2;
#X connect 148 0 14 0;
#X connect 158 0 124 0;
#X connect 159 0 160 0;
#X connect 159 0 161 0;
#X connect 162 0 163 0;
#X connect 166 0 48 0;
#X connect 170 0 7 0;
#X connect 170 0 217 0;
#X connect 170 1 8 0;
#X connect 170 1 216 0;
#X connect 170 2 0 0;
#X connect 170 3 1 0;
#X connect 170 4 2 0;
#X connect 170 5 3 0;
#X connect 170 6 4 0;
#X connect 170 7 9 0;
#X connect 170 8 171 0;
#X connect 170 9 175 0;
#X connect 171 0 173 0;
#X connect 172 0 168 0;
#X connect 173 0 174 1;
#X connect 174 0 167 0;
#X connect 175 0 172 1;
#X connect 176 0 172 0;
#X connect 176 0 174 0;
#X connect 177 0 172 0;
#X connect 177 0 174 0;
#X connect 177 0 70 0;
#X connect 177 0 232 0;
#X connect 179 0 178 0;
#X connect 180 0 184 0;
#X connect 181 0 183 0;
#X connect 182 0 181 1;
#X connect 183 0 185 0;
#X connect 184 0 181 0;
#X connect 184 1 183 1;
#X connect 186 0 198 0;
#X connect 188 0 187 0;
#X connect 189 0 57 0;
#X connect 190 0 189 1;
#X connect 192 0 194 0;
#X connect 194 0 188 0;
#X connect 194 0 195 0;
#X connect 194 1 191 0;
#X connect 195 0 193 0;
#X connect 196 0 199 0;
#X connect 197 0 192 0;
#X connect 198 0 197 0;
#X connect 198 0 20 0;
#X connect 199 0 197 1;
#X connect 202 0 200 1;
#X connect 203 0 200 2;
#X connect 204 0 226 0;
#X connect 204 1 227 0;
#X connect 204 2 208 0;
#X connect 204 3 209 0;
#X connect 204 4 210 0;
#X connect 204 5 211 0;
#X connect 204 6 212 0;
#X connect 204 7 213 0;
#X connect 204 8 214 0;
#X connect 204 9 215 0;
#X connect 205 0 204 0;
#X connect 207 0 206 0;
#X connect 208 0 229 0;
#X connect 209 0 229 0;
#X connect 210 0 229 0;
#X connect 211 0 229 0;
#X connect 212 0 229 0;
#X connect 213 0 229 0;
#X connect 214 0 229 0;
#X connect 215 0 229 0;
#X connect 218 0 220 0;
#X connect 219 0 218 0;
#X connect 219 0 220 0;
#X connect 219 0 207 0;
#X connect 220 0 201 0;
#X connect 221 0 222 0;
#X connect 222 0 202 0;
#X connect 223 0 219 0;
#X connect 223 1 228 0;
#X connect 224 0 203 0;
#X connect 225 0 203 0;
#X connect 226 0 223 0;
#X connect 226 1 224 0;
#X connect 227 0 223 0;
#X connect 227 1 225 0;
#X connect 228 0 200 0;
#X connect 229 0 230 0;
#X connect 229 1 203 0;
#X connect 230 0 219 0;
#X connect 230 1 231 0;
#X connect 231 0 200 0;
#X connect 233 0 158 0;
#X connect 234 0 236 0;
#X connect 235 0 35 0;
#X connect 236 0 235 1;
#X connect 238 0 248 0;
#X connect 238 0 253 0;
#X connect 239 0 237 0;
#X connect 241 0 240 0;
#X connect 242 0 243 0;
#X connect 243 0 241 0;
#X connect 243 0 238 0;
#X connect 245 0 247 0;
#X connect 246 0 67 0;
#X connect 246 0 68 0;
#X connect 246 0 69 0;
#X connect 246 0 70 0;
#X connect 246 0 71 0;
#X connect 246 0 72 0;
#X connect 246 0 172 0;
#X connect 246 0 174 0;
#X connect 250 0 251 0;
#X connect 251 0 252 0;
#X connect 252 0 28 0;
#X connect 253 0 249 0;
