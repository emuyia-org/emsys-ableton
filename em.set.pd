#N canvas 1562 997 1604 815 12;
#X obj 1030 644 route md mnm rep len tin bpm bpmr poly;
#X floatatom 1021 759 5 0 0 0 - - - 0;
#X floatatom 1074 760 5 0 0 0 - - - 0;
#X floatatom 1120 760 5 0 0 0 - - - 0;
#X floatatom 1164 729 5 0 0 0 - - - 0;
#X floatatom 1211 729 5 0 0 0 - - - 0;
#X floatatom 926 760 5 0 0 0 - - - 0;
#X floatatom 972 760 5 0 0 0 - - - 0;
#X obj 946 708 bank2pgm;
#X obj 1021 710 bank2pgm;
#X floatatom 1259 729 5 0 0 0 - - - 0;
#X obj 1030 595 list trim;
#X obj 1057 582 list split 2;
#X obj 1122 613 list;
#X obj 1057 533 text get set;
#X floatatom 1057 485 5 0 0 0 - - - 0;
#X obj 1017 421 counter, f 11;
#X obj 1122 465 del 50;
#X obj 1108 385 t;
#X obj 1108 336 bng 20 250 50 0 empty empty reset 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1366 200 r s.reset;
#X obj 1249 359 text size set;
#X obj 1285 500 i;
#X obj 1216 421 ==;
#X obj 1214 421 sel 1;
#X obj 1195 152 t;
#X msg 1195 201 stop;
#X obj 1235 176 loadmess 0;
#X obj 1235 225 s s.hold;
#X obj 1107 226 onebang;
#X obj 1107 177 r t.load;
#X obj 1015 176 r s.hold;
#X obj 1015 225 == 0;
#X obj 1015 274 gate 1;
#X obj 1036 304 t;
#X obj 1045 379 bng 20 250 50 0 empty empty cont 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 912 485 s s.do_pgm_out;
#X text 1064 84 only let set continue after the last rep of the current segment, f 22;
#X text 927 175 if on hold \, dont let the set continue to the next segment, f 11;
#X text 1285 378 once counter reaches max (size of set text) \, force counter to loop at current segment, f 17;
#X text 1159 514 this splits up the segment data into pairs so they can be routed, f 15;
#X obj 536 543 sel 0;
#X obj 752 515 + 1;
#X obj 749 576 s s.current_seg_id;
#X obj 613 576 text get set;
#X obj 749 625 s s.current_seg_data;
#X obj 613 625 s s.next_seg_data;
#X obj 536 592 s s.start;
#X obj 645 176 r t.stop;
#X msg 645 225 1;
#X msg 714 225 0;
#X obj 714 176 r t.4n;
#X obj 675 254 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 675 303 + 1;
#X obj 675 352 gate 2;
#X obj 704 379 b;
#X msg 593 421 0;
#X obj 550 465 s s.hold;
#X msg 799 219 clear;
#X obj 769 250 pipe 250;
#X obj 769 299 - 1;
#X obj 620 465 s tin.toggle;
#X obj 704 428 del 100;
#X obj 769 152 r s.seek_seg;
#X text 852 378 send pgm out on the load of the last rep of the current segment. or on reset \, or 100ms after manually seeking to a seg, f 22;
#X text 740 84 lets user seek to a specific seg \, with a 250 pipe to buff out spamming value changes, f 23;
#X text 470 276 if we seek a seg \, & we're live \, turn off hold & tin \, and queue up seg change at counter. if we're stopped \, don't worry about hold & tin as their states are inconsequential \, and set counter output immediately, f 28;
#X text 391 514 sending out data about the current & next seg \, and if the set is at the start, f 19;
#X obj 926 808 f;
#X obj 972 808 f;
#X obj 1024 833 f;
#X obj 1068 833 f;
#X obj 1123 833 f;
#X obj 1164 826 f;
#X obj 1211 826 f;
#X obj 1268 833 f;
#X obj 815 729 r s.do_pgm_out;
#X obj 896 760 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1326 760 r s.first_rep;
#X obj 1164 777 sel 0;
#X obj 1211 777 sel 0;
#X obj 1259 777 change;
#X obj 783 854 s s.md_pgm_change;
#X obj 864 874 s s.mnm_pgm_change;
#X obj 783 903 change;
#X obj 864 923 change;
#X obj 1024 882 s s.seg_reps;
#X obj 1024 931 s s.loop_len;
#X obj 1123 931 s s.seg_bpm_target;
#X obj 1276 910 s s.seg_poly;
#X obj 1123 882 s s.seg_tin;
#X obj 1211 875 s s.seg_bpm_rtime;
#X obj 254 647 loadmess 0;
#X obj 333 647 r s.hold;
#X obj 254 696 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 254 745 t b f f;
#X obj 228 760 == 0;
#X obj 254 809 gate 0;
#X obj 433 854 gate 1;
#X obj 327 760 == 0;
#X obj 327 809 sel 0;
#X obj 482 760 r t.beat1;
#X obj 482 809 onebang;
#X obj 564 760 r s.start;
#X obj 769 201 t f b;
#X obj 641 760 r t.downbeat;
#X obj 472 947 counter 0 0 3;
#X obj 528 1018 s s.current_rep;
#X obj 610 931 r s.seg_reps;
#X obj 610 980 - 1;
#X obj 496 874 r s.seek_rep;
#X msg 496 923 set \$1;
#X obj 493 1046 sel 0;
#X obj 493 1095 s s.first_rep;
#X text 639 853 reset rep counter each time new segment data is loaded, f 17;
#X text 510 706 only let rep counter advance after a downbeat \, or after the set has just been started, f 29;
#X floatatom 206 729 5 0 0 0 - - - 0;
#X obj 1107 128 r s.last_rep;
#X text 105 728 if hold is on \, and we're on the last rep \, don't advance the rep counter further., f 16;
#X text 366 728 when hold is turned off \, open gate up again to allow rep advancement, f 14;
#X text 493 984 rep (repetition) counter, f 17;
#X obj 236 874 r t.beat1;
#X obj 236 923 del 50;
#X obj 236 972 f;
#X obj 236 1021 sel 3;
#X obj 279 947 r s.seg_reps;
#X obj 279 996 - 1;
#X obj 236 1070 s s.last_rep;
#X text 80 909 send out that it's the last rep \, but wait a little before spreading the word incase it's acted on too early, f 21;
#X msg 1373 809 240 0 32 60 3 0 113 32 \$1 247;
#X text 1474 784 mnm poly sysex;
#X obj 355 1058 < 1;
#X obj 354 1058 sel 1;
#X msg 354 1107 set -1;
#X obj 354 1156 change;
#X obj 354 1205 sel 0;
#X obj 354 1254 onebang;
#X obj 272 1135 r s.reset;
#X msg 272 1184 stop;
#X obj 1179 595 sel 2;
#X obj 1179 644 s s.end;
#X obj 410 1196 r s.end;
#X msg 354 1303 end reached;
#X obj 359 1259 print s;
#X obj 273 1259 s t.stop;
#X text 164 1258 optional: stop transport at end of set automatically, f 14;
#X text 143 1134 reset onebang status (and thereby 'end of set' status) when set is reset, f 17;
#X text 410 1104 hack: if last segment has only 1 rep \, make sure we still detect the end of the set by setting [change] to -1, f 29;
#X text 1252 946 segment data key: - md & mnm: pgms to load on mnm & md synths - rep: how many times to repeat the segment - len: the loop length of the segment - tin: whether to jumpstart the transport at the end of the segment \, either to interrupt a md/mnm pattern with an misaligned scale length \, or to fix clock desync issues - bpm: target bpm for current seg to ramp up to - bpmr: ramp time of the bpm target (s) - poly: whether to activate mnm poly mode, f 81;
#X obj 610 833 r s.current_seg_data;
#X obj 610 882 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1316 485 s s.num_of_segs;
#X floatatom 400 1018 5 0 0 0 - - - 0;
#X obj 1122 514 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 442 1058 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 958 947 s s.seg_reps_lookahead;
#X text 3100 832 comment;
#X obj 1020 1018 s s.seg_tin_lookahead;
#X obj 987 985 s s.loop_len_lookahead;
#X obj 1052 1058 s s.seg_bpm_target_lookahead;
#X obj 1074 1076 s s.seg_bpm_rtime_lookahead;
#X obj 1074 1125 s s.seg_poly_lookahead;
#X obj 1038 910 s t.length;
#X obj 1461 718 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X floatatom 737 929 5 0 0 0 - - - 0;
#X obj 739 966 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 782 952 pgmout 31;
#X floatatom 823 988 5 0 0 0 - - - 0;
#X obj 864 972 pgmout 64;
#X obj 1373 858 midiout 4;
#X connect 0 0 8 0;
#X connect 0 1 9 0;
#X connect 0 2 1 0;
#X connect 0 3 2 0;
#X connect 0 4 3 0;
#X connect 0 5 4 0;
#X connect 0 6 5 0;
#X connect 0 7 10 0;
#X connect 1 0 70 1;
#X connect 1 0 155 0;
#X connect 2 0 71 1;
#X connect 2 0 158 0;
#X connect 3 0 72 1;
#X connect 3 0 157 0;
#X connect 4 0 79 0;
#X connect 4 0 159 0;
#X connect 5 0 160 0;
#X connect 6 0 68 1;
#X connect 7 0 69 1;
#X connect 8 0 6 0;
#X connect 9 0 7 0;
#X connect 10 0 81 0;
#X connect 10 0 161 0;
#X connect 11 0 0 0;
#X connect 12 0 11 0;
#X connect 12 1 13 0;
#X connect 13 0 12 0;
#X connect 14 0 12 0;
#X connect 14 0 45 0;
#X connect 14 1 139 0;
#X connect 15 0 14 0;
#X connect 15 0 41 0;
#X connect 15 0 42 0;
#X connect 16 0 15 0;
#X connect 16 0 23 0;
#X connect 17 0 15 0;
#X connect 17 0 36 0;
#X connect 18 0 17 0;
#X connect 18 1 16 3;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 20 0 19 0;
#X connect 20 0 25 0;
#X connect 21 0 22 1;
#X connect 21 0 23 1;
#X connect 21 0 151 0;
#X connect 22 0 16 2;
#X connect 23 0 24 0;
#X connect 24 0 22 0;
#X connect 25 0 26 0;
#X connect 25 1 27 0;
#X connect 26 0 29 0;
#X connect 27 0 28 0;
#X connect 29 0 33 1;
#X connect 30 0 29 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 34 0 36 0;
#X connect 34 1 35 0;
#X connect 35 0 16 0;
#X connect 41 0 47 0;
#X connect 42 0 43 0;
#X connect 42 0 44 0;
#X connect 44 0 46 0;
#X connect 48 0 49 0;
#X connect 49 0 52 0;
#X connect 50 0 52 0;
#X connect 51 0 50 0;
#X connect 52 0 53 0;
#X connect 53 0 54 0;
#X connect 54 0 16 2;
#X connect 54 1 55 0;
#X connect 54 1 16 3;
#X connect 55 0 56 0;
#X connect 55 0 62 0;
#X connect 56 0 57 0;
#X connect 56 0 61 0;
#X connect 58 0 59 0;
#X connect 59 0 60 0;
#X connect 60 0 54 1;
#X connect 62 0 36 0;
#X connect 63 0 104 0;
#X connect 68 0 82 0;
#X connect 68 0 84 0;
#X connect 69 0 83 0;
#X connect 69 0 85 0;
#X connect 70 0 86 0;
#X connect 71 0 87 0;
#X connect 71 0 162 0;
#X connect 72 0 90 0;
#X connect 73 0 88 0;
#X connect 74 0 91 0;
#X connect 75 0 89 0;
#X connect 75 0 129 0;
#X connect 76 0 77 0;
#X connect 77 0 68 0;
#X connect 77 0 69 0;
#X connect 78 0 70 0;
#X connect 78 0 71 0;
#X connect 78 0 72 0;
#X connect 78 0 73 0;
#X connect 78 0 74 0;
#X connect 78 0 75 0;
#X connect 79 1 73 1;
#X connect 80 1 74 1;
#X connect 81 0 75 1;
#X connect 84 0 166 0;
#X connect 85 0 168 0;
#X connect 92 0 94 0;
#X connect 93 0 94 0;
#X connect 94 0 95 0;
#X connect 95 0 96 0;
#X connect 95 1 99 0;
#X connect 95 2 97 0;
#X connect 96 0 97 1;
#X connect 97 0 98 0;
#X connect 98 0 106 0;
#X connect 99 0 100 0;
#X connect 100 1 98 0;
#X connect 101 0 102 0;
#X connect 102 0 98 1;
#X connect 103 0 102 1;
#X connect 104 0 59 0;
#X connect 104 1 58 0;
#X connect 105 0 102 1;
#X connect 106 0 107 0;
#X connect 106 0 112 0;
#X connect 106 0 123 1;
#X connect 106 0 134 0;
#X connect 106 0 152 0;
#X connect 106 0 154 0;
#X connect 106 2 116 0;
#X connect 108 0 109 0;
#X connect 109 0 106 4;
#X connect 110 0 111 0;
#X connect 111 0 106 0;
#X connect 112 0 113 0;
#X connect 116 0 96 0;
#X connect 117 0 29 1;
#X connect 121 0 122 0;
#X connect 122 0 123 0;
#X connect 123 0 124 0;
#X connect 124 0 127 0;
#X connect 125 0 126 0;
#X connect 126 0 124 1;
#X connect 126 0 131 0;
#X connect 129 0 169 0;
#X connect 131 0 132 0;
#X connect 132 0 133 0;
#X connect 133 0 134 0;
#X connect 134 0 135 0;
#X connect 135 0 136 0;
#X connect 136 0 142 0;
#X connect 137 0 138 0;
#X connect 138 0 136 0;
#X connect 139 0 140 0;
#X connect 141 0 136 1;
#X connect 142 0 143 0;
#X connect 149 0 150 0;
#X connect 150 0 106 2;
#X connect 153 0 15 0;
#X connect 163 0 129 0;
#X connect 164 0 165 0;
#X connect 164 0 166 0;
#X connect 167 0 168 0;
