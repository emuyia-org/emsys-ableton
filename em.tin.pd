#N canvas 733 172 450 300 8;
#X obj 58 399 realtime;
#X floatatom 385 255 9 0 0 2 Latency - - 10;
#X obj 71 345 onebang;
#X obj 54 313 bng 25 250 50 0 empty empty empty 17 7 0 10 #191919 #ffffff #ffffff;
#X obj 826 303 realtime;
#X obj 827 272 t, f 9;
#X obj 622 543 del;
#X obj 395 296 bng 33 75 50 0 empty empty Beat\ 1? -1 -10 0 10 #ff8bd9 #000000 #e110d1;
#X obj 826 377 avg;
#X floatatom 348 382 16 0 0 2 Avg\ beat\ time - - 12;
#X msg 760 377 clear;
#X msg 622 599 250;
#X obj 573 744 midiout;
#X floatatom 348 348 16 0 0 2 Rolling\ beat\ time - - 12;
#X obj 748 218 sel 0;
#X obj 722 252 gate 1;
#X obj 717 218 tgl 25 0 empty empty empty 17 7 0 10 #191919 #e1e1e1 #e1e1e1 0 1;
#X obj 724 277 t;
#X msg 771 314 0;
#X obj 724 310 bng 25 250 50 0 empty empty empty 17 7 0 10 #191919 #e1e1e1 #e1e1e1;
#X msg 719 186 1;
#X obj 716 108 loadbang;
#X obj 671 473 bng 25 250 50 0 empty empty downbeat 17 7 0 10 #191919 #e1e1e1 #e1e1e1;
#X obj 58 436 avg;
#X msg 131 394 clear;
#X obj 354 251 tgl 22 0 empty empty Calibrate -6 -7 0 8 #7e0a0e #fffded #b20020 0 1;
#X msg 151 249 0;
#X obj 149 189 sel 1;
#X obj 131 443 metro 500;
#X obj 149 219 delay 5000;
#X obj 60 476 / 2;
#X obj 629 466 -;
#X obj 658 508 onebang, f 14;
#X msg 658 599 252;
#X obj 622 633 f;
#X obj 594 675 gate 0, f 10;
#X obj 350 296 tgl 31 0 empty empty Interrupt -5 -9 0 11 #c69825 #e1e1e1 #e19d00 0 1;
#X msg 474 75 1;
#X msg 470 277 0;
#X obj 426 173 gate 0;
#X obj 658 744 print interrupt;
#X obj 573 708 gate 1;
#X obj 743 473 r load;
#X obj 131 474 s stop;
#X obj 54 265 r stop_press;
#X obj 54 291 r start_press;
#X obj 70 238 r mcl_start;
#X obj 716 131 r mcl_start;
#X obj 632 334 r mcl_start;
#X obj 717 154 r mcl_stop;
#X obj 633 312 r mcl_stop;
#X obj 71 213 r mcl_stop;
#X text 802 93 bug: if tempo is changed during avg beat time calculation then transport interrupt will likely fail to be on time, f 19;
#X obj 471 50 r seg_last;
#X obj 636 355 r beat1;
#X obj 410 130 r tin?;
#X obj 671 433 r downbeat;
#X obj 827 236 r beat_counter;
#X obj 826 425 s avg_beat_time;
#X obj 267 458 r avg_beat_time;
#X obj 864 334 s rolling_beat_time;
#X obj 292 433 r rolling_beat_time;
#X obj 60 508 s midi_latency;
#X obj 605 408 r midi_latency;
#X obj 622 570 bng 25 250 50 0 empty empty empty 17 7 0 10 #191919 #e1e1e1 #e1e1e1;
#X text 908 114 potential fix: make it so that any tempo changes that occur from Pd make transport interrupts use the rolling beat time instead of the avg beat time \, with a cool off period. for tempo changes that occur from external source \, perhaps we can detect the degree of tempo change and do the same thing.;
#X obj 743 543 r md_pgmout;
#X obj 743 569 change;
#X obj 741 596 bng 25 250 50 0 empty empty empty 17 7 0 10 #191919 #e1e1e1 #e1e1e1;
#X obj 774 596 r seg_start;
#X obj 743 667 tgl 25 0 empty empty empty 17 7 0 10 #191919 #e1e1e1 #e1e1e1 0 1;
#X msg 776 629 1;
#X msg 743 631 0;
#X text 840 543 fix: prevent interrupts being sent when MCL is being told to load a new track group (via pgm), f 18;
#X obj 509 744 sel 250;
#X obj 452 213 r tintin;
#X text 503 212 fix: only disable tin once 250 (play) message has been sent. not on every 1st beat. this way \, tin is held across segs until activated, f 24;
#X obj 452 241 sel 0;
#X obj 816 695 print MD_PGM_CHANGE;
#X obj 872 733 print SEG_START;
#X text 217 598 possible bug: weirdness with predicted beat 1 not starting at the right time? verify this with actual set up when I'm home \, rather than seq24. i think it appears like it's not working simply because the stop signal isn't being received by seq24. but verify to be safe \, or create own clock within puredata instead of seq24 to be sure., f 44;
#X msg 204 134 color #C69825;
#X msg 204 108 color #B39598;
#X obj 450 104 gate 1;
#X obj 373 26 r seg_hold;
#X obj 373 56 == 0;
#X obj 450 26 loadmess 1;
#X text 503 74 only activate tin on seg_last if the current seg is tin=1 \, and also \, if seg_hold is not on, f 26;
#X connect 0 0 23 0;
#X connect 2 0 0 1;
#X connect 3 0 2 1;
#X connect 3 0 0 0;
#X connect 4 0 60 0;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 5 1 4 1;
#X connect 6 0 64 0;
#X connect 7 0 38 0;
#X connect 8 0 31 0;
#X connect 8 0 58 0;
#X connect 10 0 8 0;
#X connect 11 0 34 0;
#X connect 14 1 15 1;
#X connect 15 0 17 0;
#X connect 16 0 15 0;
#X connect 17 0 19 0;
#X connect 17 1 18 0;
#X connect 18 0 16 0;
#X connect 19 0 10 0;
#X connect 20 0 16 0;
#X connect 21 0 20 0;
#X connect 22 0 32 0;
#X connect 23 0 30 0;
#X connect 24 0 23 0;
#X connect 25 0 28 0;
#X connect 25 0 27 0;
#X connect 26 0 25 0;
#X connect 27 0 29 0;
#X connect 27 0 24 0 32.................F....79+++uA....u++++qK....;
#X connect 28 0 43 0;
#X connect 29 0 26 0;
#X connect 30 0 62 0;
#X connect 31 0 6 1;
#X connect 32 0 6 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 34 0 35 1;
#X connect 35 0 41 1;
#X connect 36 0 35 0;
#X connect 37 0 83 1;
#X connect 38 0 36 0;
#X connect 39 0 36 0;
#X connect 41 0 12 0;
#X connect 41 0 40 0;
#X connect 41 0 74 0;
#X connect 42 0 32 1;
#X connect 44 0 3 0;
#X connect 45 0 3 0;
#X connect 46 0 2 0;
#X connect 47 0 20 0;
#X connect 48 0 10 0;
#X connect 49 0 20 0;
#X connect 50 0 10 0;
#X connect 51 0 2 0;
#X connect 53 0 37 0;
#X connect 54 0 10 0;
#X connect 55 0 39 0;
#X connect 56 0 22 0;
#X connect 57 0 5 0;
#X connect 57 0 14 0;
#X connect 59 0 9 0;
#X connect 61 0 13 0;
#X connect 63 0 31 1;
#X connect 63 0 1 0;
#X connect 64 0 11 0;
#X connect 66 0 67 0;
#X connect 67 0 68 0;
#X connect 68 0 72 0;
#X connect 68 0 78 0;
#X connect 69 0 71 0;
#X connect 69 0 79 0;
#X connect 70 0 41 0;
#X connect 71 0 70 0;
#X connect 72 0 70 0;
#X connect 74 0 7 0;
#X connect 75 0 77 0;
#X connect 77 1 36 0;
#X connect 81 0 36 0;
#X connect 82 0 36 0;
#X connect 83 0 39 1;
#X connect 84 0 85 0;
#X connect 85 0 83 0;
#X connect 86 0 83 0;
#X coords 0 0 1 1 105 186 1 339 223;
