#N canvas 2038 974 1024 344 12;
#X text 1269 2291 ., f 3;
#X obj 289 1 em.transport;
#X obj 1 135 em.tin;
#X obj 1 1 em.set;
#X text 524 13 concern: tins seem to still go through on mcl loads sometimes \, or just miss sending the stop signal... either way \, sometimes i hear 'doubled up' kicks in the patterns indicating the stop signal is not going through. not sure why this is happening.;
#X obj -1 269 em.dev;
#X obj -151 29 loadmess 1;
#X obj -151 59 pipe 250;
#X obj 450 212 bng 31 250 50 0 shutdown empty shutdown -7 -6 0 10 #d82332 #e1e1e1 #e1e1e1;
#X obj -151 224 shell;
#X obj -151 164 r shutdown;
#X msg -151 194 sudo shutdown now;
#X text 3 213 1) wait for system to settle \; 2) verify latency calibration;
#X obj -151 89 dsp;
#X floatatom 404 224 5 0 0 2 cpu cpu_indicator - 0;
#X obj -151 119 s cpu_indicator;
#X obj 343 361 notein;
#X obj 330 479 noteout 9;
#X obj 422 350 hradio 21 1 0 7 empty empty mnm\ track 19 -11 0 12 #232323 #dcdcdc #84aaff 0;
#X obj 423 379 + 1;
#X obj 419 407 sel 7;
#X msg 420 435 9;
#X obj 416 310 loadmess 9;
#X text 530 93 problem: pressing keyboard notes triggers the transport sequence \, when only the pads should be doing that;
#X obj 333 398 stripnote;
#X obj 265 430 selector 2;
#X obj 338 430 selector 2;
#X obj 299 367 tgl 25 0 empty empty stripnote -8 -9 0 10 #191919 #e1e1e1 #e1e1e1 0 1;
#X text -111 473 problem: this seems to not work with USB FWD 2... which is weird because USB FWD worked for sysex messages to MD (USB FWD: 1). if worst comes to worst \, I could solve this by using the MIDI merge box... but I want to avoid that., f 45;
#X text -114 563 potential solution: MIDI clock from Monomachine?? :) \; that way I can control tempo and poly mode / whatever other sysex stuff all on the mono \, which is in most need of customisation anyway, f 47;
#X text -116 642 this unfortunately sacrifices storing tempo changes in MCL - that would need to be something stored here instead... which is \, doable? but offloads even more to here \, which is concerning for stability's sake;
#X text -117 715 although \, that could have an advantage... controlling tempo from here means there doesn't have to be any sudden tempo changes and ergo.. desync. I could introduce a feature where the segment data steers the tempo with [line] but does not override the tempo detected at any given moment - which would make tempo changes more gradual.;
#X text 684 241 new seg data proposal \; - bpm xxx \; - poly 0/1 \; \; other: \; - mnmsq <name> \; - pdsn <name> \; - pdsq <name>;
#X text 682 392 inter-patch communication between sq and sn modules \; - idk;
#X text -102 443 poly mode...;
#X connect 6 0 7 0;
#X connect 7 0 13 0;
#X connect 10 0 11 0;
#X connect 11 0 9 0;
#X connect 13 0 15 0;
#X connect 16 0 24 0;
#X connect 16 0 25 0;
#X connect 16 1 24 1;
#X connect 16 1 26 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 20 1 17 2;
#X connect 21 0 17 2;
#X connect 22 0 18 0;
#X connect 24 0 25 1;
#X connect 24 1 26 1;
#X connect 25 0 17 0;
#X connect 26 0 17 1;
#X connect 27 0 26 2;
#X connect 27 0 25 2;
#X coords 0 -1 1 1 494 252 2 0 0;
