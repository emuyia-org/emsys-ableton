#N canvas 1440 924 1920 980 12;
#X floatatom 1024 860 5 0 0 0 - - - 0;
#X floatatom 1077 861 5 0 0 0 - - - 0;
#X floatatom 1123 861 5 0 0 0 - - - 0;
#X floatatom 1167 830 5 0 0 0 - - - 0;
#X floatatom 1214 830 5 0 0 0 - - - 0;
#X floatatom 929 861 5 0 0 0 - - - 0;
#X floatatom 975 861 5 0 0 0 - - - 0;
#X obj 949 809 bank2pgm;
#X obj 1024 811 bank2pgm;
#X floatatom 1262 830 5 0 0 0 - - - 0;
#X obj 1033 696 list trim;
#X obj 1062 671 list split 2;
#X obj 1125 714 list;
#X obj 1060 634 text get set;
#X floatatom 1060 586 5 0 0 0 - - - 0;
#X obj 1023 414 counter, f 12;
#X obj 1128 458 del 50;
#X obj 1114 378 t;
#X obj 1114 329 bng 20 250 50 0 empty empty reset 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1372 193 r s.reset;
#X obj 1255 352 text size set;
#X obj 1291 493 i;
#X obj 1222 414 ==;
#X obj 1220 414 sel 1;
#X obj 1201 145 t;
#X msg 1201 194 stop;
#X obj 1241 169 loadmess 0;
#X obj 1241 218 s s.hold;
#X obj 1113 219 onebang;
#X obj 1113 170 r t.load;
#X obj 1021 169 r s.hold;
#X obj 1021 218 == 0;
#X obj 1021 267 gate 1;
#X obj 1042 297 t;
#X obj 1051 372 bng 20 250 50 0 empty empty cont 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 916 462 s s.do_pgm_out;
#X text 1070 72 only let set continue after the last rep of the current segment, f 22;
#X text 933 163 if on hold \, dont let the set continue to the next segment, f 11;
#X text 1291 366 once counter reaches max (size of set text) \, force counter to loop at current segment, f 17;
#X text 1157 607 this splits up the segment data into pairs so they can be routed, f 15;
#X obj 533 686 sel 0;
#X obj 739 691 + 1;
#X obj 737 729 s s.current_seg_id;
#X obj 612 735 text get set;
#X obj 886 737 s s.current_seg_data;
#X obj 610 768 s s.next_seg_data;
#X obj 533 735 s s.start;
#X obj 648 179 r t.stop;
#X msg 651 218 1;
#X msg 720 218 0;
#X obj 718 179 r t.4n;
#X obj 681 247 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 681 296 + 1;
#X obj 681 345 gate 2;
#X obj 710 372 b;
#X msg 629 421 0;
#X obj 556 458 s s.hold;
#X obj 756 287 - 1;
#X obj 626 458 s tin.toggle;
#X obj 710 421 del 100;
#X obj 769 212 r s.seek_seg;
#X text 858 366 send pgm out on the load of the last rep of the current segment. or on reset \, or 100ms after manually seeking to a seg, f 22;
#X text 767 142 lets user seek to a specific seg \, with a 250 pipe to buff out spamming value changes, f 23;
#X text 476 264 if we seek a seg \, & we're live \, turn off hold & tin \, and queue up seg change at counter. if we're stopped \, don't worry about hold & tin as their states are inconsequential \, and set counter output immediately, f 28;
#X text 402 678 sending out data about the current & next seg \, and if the set is at the start, f 19;
#X obj 929 909 f;
#X obj 975 909 f;
#X obj 1027 934 f;
#X obj 1071 934 f;
#X obj 1126 934 f;
#X obj 1167 927 f;
#X obj 1214 927 f;
#X obj 1271 934 f;
#X obj 818 830 r s.do_pgm_out;
#X obj 899 861 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1167 878 sel 0;
#X obj 1214 878 sel 0;
#X obj 1262 878 change;
#X obj 778 935 s s.md_pgm_change;
#X obj 779 973 s s.mnm_pgm_change;
#X obj 663 1193 change;
#X obj 747 1201 change;
#X obj 1027 983 s s.seg_reps;
#X obj 1027 1032 s s.loop_len;
#X obj 1126 1032 s s.seg_bpm_target;
#X obj 1264 1009 s s.seg_poly;
#X obj 1126 983 s s.seg_tin;
#X obj 1214 976 s s.seg_bpm_rtime;
#X obj 257 748 loadmess 0;
#X obj 336 748 r s.hold;
#X obj 257 797 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 262 828 t b f f;
#X obj 231 861 == 0;
#X obj 257 910 gate 0;
#X obj 436 955 gate 1;
#X obj 330 861 == 0;
#X obj 330 910 sel 0;
#X obj 485 861 r t.beat1;
#X obj 485 910 onebang;
#X obj 567 861 r s.start;
#X obj 644 861 r t.downbeat;
#X obj 475 1048 counter 0 0 3;
#X obj 531 1119 s s.current_rep;
#X obj 613 1032 r s.seg_reps;
#X obj 611 1068 - 1;
#X obj 499 975 r s.seek_rep;
#X msg 493 1010 set \$1;
#X obj 496 1147 sel 0;
#X obj 496 1196 s s.first_rep;
#X text 642 949 reset rep counter each time new segment data is loaded, f 17;
#X text 513 802 only let rep counter advance after a downbeat \, or after the set has just been started, f 29;
#X floatatom 199 810 5 0 0 0 - - - 0;
#X obj 1113 121 r s.last_rep;
#X text 108 824 if hold is on \, and we're on the last rep \, don't advance the rep counter further., f 16;
#X text 369 824 when hold is turned off \, open gate up again to allow rep advancement, f 14;
#X text 496 1080 rep (repetition) counter, f 17;
#X obj 239 975 r t.beat1;
#X obj 239 1024 del 50;
#X obj 239 1073 f;
#X obj 239 1122 sel 3;
#X obj 282 1048 r s.seg_reps;
#X obj 282 1097 - 1;
#X obj 239 1171 s s.last_rep;
#X text 83 1005 send out that it's the last rep \, but wait a little before spreading the word incase it's acted on too early, f 21;
#X msg 1298 1200 240 0 32 60 3 0 113 32 \$1 247;
#X text 1399 1170 mnm poly sysex;
#X obj 352 1126 < 1;
#X obj 357 1159 sel 1;
#X msg 357 1208 set -1;
#X obj 357 1257 change;
#X obj 357 1306 sel 0;
#X obj 357 1355 onebang;
#X obj 275 1236 r s.reset;
#X msg 275 1285 stop;
#X obj 1182 696 sel 2;
#X obj 1241 721 s s.end;
#X obj 413 1297 r s.end;
#X msg 357 1404 end reached;
#X obj 426 1453 print s;
#X obj 276 1360 s t.stop;
#X text 167 1354 optional: stop transport at end of set automatically, f 14;
#X text 146 1230 reset onebang status (and thereby 'end of set' status) when set is reset, f 17;
#X text 413 1212 hack: if last segment has only 1 rep \, make sure we still detect the end of the set by setting [change] to -1, f 29;
#X text 1255 1043 segment data key: - md & mnm: pgms to load on mnm & md synths - rep: how many times to repeat the segment - len: the loop length of the segment - tin: whether to jumpstart the transport at the end of the segment \, either to interrupt a md/mnm pattern with an misaligned scale length \, or to fix clock desync issues - bpm: target bpm for current seg to ramp up to - bpmr: ramp time of the bpm target (s) - poly: whether to activate mnm poly mode, f 81;
#X obj 613 934 r s.current_seg_data;
#X obj 613 983 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1336 478 s s.num_of_segs;
#X floatatom 403 1119 5 0 0 0 - - - 0;
#X obj 1178 365 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 445 1159 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 955 1059 s s.seg_reps_lookahead;
#X obj 1023 1119 s s.seg_tin_lookahead;
#X obj 990 1086 s s.loop_len_lookahead;
#X obj 1063 1157 s s.seg_bpm_target_lookahead;
#X obj 1027 1192 s s.seg_bpm_rtime_lookahead;
#X obj 1077 1226 s s.seg_poly_lookahead;
#X obj 1041 1011 s t.length;
#X obj 1300 1165 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 647 1252 pgmout 31;
#X obj 1298 1249 midiout 4;
#X floatatom 772 323 5 0 0 0 - - - 0;
#X obj 571 179 loadbang;
#X obj 1375 1012 s s.seg_midiseq_id;
#X obj 1396 979 s s.seg_midiseq_dest;
#X obj 1033 745 route md mnm rep len tin bpm bpmr poly seq seqto;
#X floatatom 1295 792 5 0 0 0 - - - 0;
#X obj 1384 940 symbol;
#X obj 1313 836 change;
#X obj 1324 942 f;
#X obj 1389 901 tosymbol;
#X obj 1458 907 r t.interrupt;
#X obj 1466 868 r s.reset;
#X obj 1558 901 s t.tempo;
#X obj 1561 867 once;
#X obj 532 1341 r s.seg_bpm_target_lookahead;
#X obj 520 1401 onebang;
#X obj 596 1308 r s.reset;
#X obj 520 1432 i;
#X obj 525 1369 t b f;
#X obj 517 1468 s t.tempo;
#X obj 1442 371 r s.reload;
#X obj 1381 608 s tin.toggle;
#X msg 1375 561 1;
#X obj 757 251 i;
#X obj 868 215 r s.current_seg_id;
#X obj 1545 569 s s.seek_seg;
#X floatatom 1496 513 5 0 0 0 - - - 0;
#X obj 1491 599 s ctl.update_text;
#X obj 1484 543 t b f;
#X obj 1561 396 r s.current_seg_id;
#X obj 1489 468 i;
#X obj 1463 427 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X floatatom 1512 433 5 0 0 0 - - - 0;
#X obj 744 799 s s.seg_mnm_bank_lookahead;
#X obj 746 777 s s.seg_md_bank_lookahead;
#X obj 1705 873 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1337 1156 r s.poly;
#X obj 805 414 buddy;
#X obj 837 346 sel 0;
#X obj 249 432 del 50;
#X obj 342 432 s tin.toggle;
#X msg 334 390 1;
#X obj 324 316 r s.seek_seg;
#X obj 327 352 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X text 142 358 extra seek_seg checks;
#X obj 1406 778 r s.first_rep;
#X obj 1331 871 r s.push_seg_data;
#X obj 1406 807 s s.push_seg_data;
#X obj 206 471 s s.push_seg_data;
#X obj 222 545 s s.seek_rep;
#X obj 1269 33 r s.seek_rep;
#X obj 1273 70 onebang;
#X msg 1275 106 stop;
#X obj 798 266 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 789 1046 r ctl.seek_knob_state;
#X obj 785 1076 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 779 1116 sel 1;
#X msg 777 1149 set -1;
#X obj 848 1118 r s.reset;
#X obj 846 1147 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 817 633 i;
#X text 811 1171 let changes through if seek knob is held down \, so that we can reload the pgm by clicking the knob and not changing the value, f 19;
#X msg 239 513 0;
#X floatatom 785 1304 5 0 0 0 - - - 0;
#X floatatom 845 1389 5 0 0 0 - - - 0;
#X obj 734 1256 pgmout 49;
#X obj 901 1297 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #191919 #e1e1e1 #e1e1e1 0 256;
#X obj 595 1159 r midich_md_pgm;
#X obj 879 1157 r midich_mnm_pgm;
#X floatatom 882 1380 5 0 0 0 - - - 12;
#X obj 1399 1249 r midich_mnm_sysex;
#X obj 1916 813 text set set;
#X obj 2432 915 s s.save;
#X floatatom 1961 715 5 0 0 0 - - - 0;
#X floatatom 2008 715 5 0 0 0 - - - 0;
#X obj 1933 298 route md mnm rep len tin bpm bpmr poly seq seqto, f 63;
#X obj 1932 255 r s.write_seg_data;
#X obj 2339 921 s s.reload;
#X msg 2010 341 \$1 5;
#X msg 2053 342 \$1 7;
#X msg 2097 340 \$1 9;
#X msg 2142 342 \$1 11;
#X msg 2186 342 \$1 13;
#X msg 2234 339 \$1 15;
#X msg 2285 340 \$1 17;
#X msg 2330 342 \$1 19;
#X msg 2419 783 stop;
#X obj 2044 561 r s.current_seg_id;
#X obj 2044 597 - 1;
#X obj 1917 607 t b a;
#X msg 1931 478 1;
#X msg 1979 474 3;
#X obj 1910 443 t a b;
#X obj 1960 442 t a b;
#X obj 1884 684 tosymbol;
#X obj 1965 525 unpack f f;
#X obj 1938 653 t b f;
#X floatatom 1909 716 5 0 0 0 - - - 0;
#X obj 2013 820 s scmgr.temp_param.val;
#X obj 2181 773 s scmgr.temp;
#X obj 2181 694 prepend temp_param;
#X msg 2113 639 MD Bank;
#X msg 2191 639 MnM Bank;
#X msg 2282 639 repetitions;
#X msg 2379 639 loop length;
#X msg 2476 639 transport interrupt;
#X msg 2609 639 BPM;
#X msg 2775 639 MnM poly mode;
#X obj 2181 729 zl change;
#X msg 2894 639 Seq patch;
#X msg 2663 639 BPM ramp (s);
#X msg 2980 639 Seq patch dest;
#X msg 2300 847 zlclear;
#X msg 2316 791 stop;
#X obj 2300 759 t, f 6;
#X obj 2300 820 del 750;
#X obj 2423 850 del 650;
#X obj 2142 371 t a b;
#X obj 2186 371 t a b;
#X obj 2285 371 t a b;
#X obj 2330 371 t a b;
#X obj 2234 371 t a b;
#X obj 2097 371 t a b;
#X text 2410 324 fix for ui showing "0" randomly: temp_param message to line_manager must come BEFORE values are set \, so we use [t a b], f 49;
#X obj 2053 371 t a b;
#X obj 2010 371 t a b;
#X obj 1061 530 min;
#X obj 1124 498 r s.num_of_segs;
#X obj 1110 526 - 1;
#X obj 1061 557 max 0;
#X obj 863 317 r ctl.shift;
#X obj 2341 887 del 100;
#X obj 1485 571 del 100;
#X obj 1656 522 bng 25 250 50 0 empty empty empty 17 7 0 10 #191919 #e1e1e1 #e1e1e1;
#X obj 2300 947 s s.reload;
#X obj 1487 400 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 828 1088 r s.allowPGMChange;
#X obj 625 1432 print PGM_MD;
#X obj 726 1432 print PGM_MnM, f 15;
#X obj 708 884 s s.seg_md_pgm_lookahead;
#X obj 706 906 s s.seg_mnm_pgm_lookahead;
#X obj 1179 1349 r s.current_seg_id;
#X obj 1071 1349 r s.first_rep;
#X obj 1071 1439 i, f 7;
#X obj 1071 1483 s s.seg_id.now;
#X obj 1296 1349 r s.seg_md_pgm_lookahead;
#X obj 1480 1349 r s.seg_mnm_pgm_lookahead;
#X obj 1184 1439 i, f 7;
#X obj 1303 1439 i, f 7;
#X obj 1184 1483 s s.md_pgm.now;
#X obj 1303 1483 s s.mnm_pgm.now;
#X obj 1071 1389 bng 25 250 50 0 empty empty empty 17 7 0 10 #211d14 #e1bf96 #e1ce9c;
#X obj 1015 1317 r t.transport_status;
#X obj 1015 1350 sel 1;
#X connect 0 0 67 1;
#X connect 0 0 150 0;
#X connect 1 0 68 1;
#X connect 1 0 152 0;
#X connect 2 0 69 1;
#X connect 2 0 151 0;
#X connect 3 0 75 0;
#X connect 3 0 153 0;
#X connect 3 0 173 0;
#X connect 4 0 154 0;
#X connect 4 0 76 0;
#X connect 5 0 65 1;
#X connect 6 0 66 1;
#X connect 7 0 5 0;
#X connect 7 0 299 0;
#X connect 8 0 6 0;
#X connect 8 0 300 0;
#X connect 9 0 77 0;
#X connect 9 0 155 0;
#X connect 10 0 164 0;
#X connect 11 0 10 0;
#X connect 11 1 12 0;
#X connect 12 0 11 0;
#X connect 13 0 11 0;
#X connect 13 0 44 0;
#X connect 13 1 134 0;
#X connect 14 0 13 0;
#X connect 14 0 220 0;
#X connect 15 0 22 0;
#X connect 15 0 286 0;
#X connect 16 0 35 0;
#X connect 16 0 286 0;
#X connect 17 0 16 0;
#X connect 17 1 15 3;
#X connect 18 0 17 0;
#X connect 19 0 20 0;
#X connect 19 0 18 0;
#X connect 19 0 24 0;
#X connect 20 0 21 1;
#X connect 20 0 22 1;
#X connect 20 0 146 0;
#X connect 21 0 15 2;
#X connect 22 0 23 0;
#X connect 23 0 21 0;
#X connect 24 0 25 0;
#X connect 24 1 26 0;
#X connect 25 0 28 0;
#X connect 26 0 27 0;
#X connect 28 0 32 1;
#X connect 29 0 28 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 33 0 35 0;
#X connect 33 1 34 0;
#X connect 34 0 15 0;
#X connect 40 0 46 0;
#X connect 41 0 42 0;
#X connect 41 0 43 0;
#X connect 43 0 45 0;
#X connect 47 0 48 0;
#X connect 48 0 51 0;
#X connect 49 0 51 0;
#X connect 50 0 49 0;
#X connect 51 0 52 0;
#X connect 52 0 53 0;
#X connect 53 0 15 2;
#X connect 53 1 54 0;
#X connect 53 1 15 3;
#X connect 54 0 59 0;
#X connect 54 0 55 0;
#X connect 55 0 58 0;
#X connect 57 0 53 1;
#X connect 57 0 160 0;
#X connect 59 0 197 0;
#X connect 60 0 183 0;
#X connect 60 0 213 0;
#X connect 65 0 78 0;
#X connect 65 0 80 0;
#X connect 66 0 79 0;
#X connect 66 0 81 0;
#X connect 67 0 82 0;
#X connect 68 0 83 0;
#X connect 68 0 156 0;
#X connect 69 0 86 0;
#X connect 70 0 84 0;
#X connect 71 0 87 0;
#X connect 72 0 85 0;
#X connect 72 0 157 0;
#X connect 73 0 74 0;
#X connect 74 0 65 0;
#X connect 74 0 66 0;
#X connect 75 1 70 1;
#X connect 76 1 71 1;
#X connect 77 0 72 1;
#X connect 80 0 158 0;
#X connect 80 0 297 0;
#X connect 81 0 225 0;
#X connect 81 0 298 0;
#X connect 88 0 90 0;
#X connect 89 0 90 0;
#X connect 90 0 91 0;
#X connect 91 0 92 0;
#X connect 91 1 95 0;
#X connect 91 2 93 0;
#X connect 92 0 93 1;
#X connect 93 0 94 0;
#X connect 94 0 101 0;
#X connect 95 0 96 0;
#X connect 96 1 94 0;
#X connect 97 0 98 0;
#X connect 98 0 94 1;
#X connect 99 0 98 1;
#X connect 100 0 98 1;
#X connect 101 0 102 0;
#X connect 101 0 107 0;
#X connect 101 0 118 1;
#X connect 101 0 129 0;
#X connect 101 0 147 0;
#X connect 101 0 149 0;
#X connect 101 2 111 0;
#X connect 103 0 104 0;
#X connect 104 0 101 4;
#X connect 105 0 106 0;
#X connect 106 0 101 0;
#X connect 107 0 108 0;
#X connect 111 0 92 0;
#X connect 112 0 28 1;
#X connect 112 0 211 1;
#X connect 116 0 117 0;
#X connect 117 0 118 0;
#X connect 118 0 119 0;
#X connect 119 0 122 0;
#X connect 120 0 121 0;
#X connect 121 0 119 1;
#X connect 121 0 126 0;
#X connect 124 0 159 0;
#X connect 126 0 127 0;
#X connect 127 0 128 0;
#X connect 128 0 129 0;
#X connect 129 0 130 0;
#X connect 130 0 131 0;
#X connect 131 0 137 0;
#X connect 132 0 133 0;
#X connect 133 0 131 0;
#X connect 134 0 135 0;
#X connect 136 0 131 1;
#X connect 137 0 138 0;
#X connect 144 0 145 0;
#X connect 145 0 101 2;
#X connect 148 0 286 0;
#X connect 157 0 124 0;
#X connect 161 0 48 0;
#X connect 164 0 7 0;
#X connect 164 0 194 0;
#X connect 164 1 8 0;
#X connect 164 1 193 0;
#X connect 164 2 0 0;
#X connect 164 3 1 0;
#X connect 164 4 2 0;
#X connect 164 5 3 0;
#X connect 164 6 4 0;
#X connect 164 7 9 0;
#X connect 164 8 165 0;
#X connect 164 9 169 0;
#X connect 165 0 167 0;
#X connect 166 0 163 0;
#X connect 167 0 168 1;
#X connect 168 0 162 0;
#X connect 169 0 166 1;
#X connect 170 0 166 0;
#X connect 170 0 168 0;
#X connect 171 0 166 0;
#X connect 171 0 168 0;
#X connect 171 0 70 0;
#X connect 171 0 195 0;
#X connect 173 0 172 0;
#X connect 174 0 178 0;
#X connect 175 0 177 0;
#X connect 176 0 175 1;
#X connect 177 0 179 0;
#X connect 178 0 175 0;
#X connect 178 1 177 1;
#X connect 180 0 191 0;
#X connect 180 0 295 0;
#X connect 183 0 57 0;
#X connect 184 0 183 1;
#X connect 186 0 188 0;
#X connect 188 0 182 0;
#X connect 188 0 292 0;
#X connect 188 1 185 0;
#X connect 189 0 192 0;
#X connect 190 0 186 0;
#X connect 191 0 190 0;
#X connect 191 0 20 0;
#X connect 192 0 190 1;
#X connect 196 0 157 0;
#X connect 197 0 35 0;
#X connect 198 0 197 1;
#X connect 199 0 208 0;
#X connect 199 0 222 0;
#X connect 202 0 203 0;
#X connect 203 0 201 0;
#X connect 203 0 199 0;
#X connect 205 0 207 0;
#X connect 206 0 67 0;
#X connect 206 0 68 0;
#X connect 206 0 69 0;
#X connect 206 0 70 0;
#X connect 206 0 71 0;
#X connect 206 0 72 0;
#X connect 206 0 166 0;
#X connect 206 0 168 0;
#X connect 210 0 211 0;
#X connect 211 0 212 0;
#X connect 212 0 28 0;
#X connect 214 0 215 0;
#X connect 215 0 216 0;
#X connect 216 0 217 0;
#X connect 217 0 81 0;
#X connect 217 0 80 0;
#X connect 218 0 219 0;
#X connect 219 0 217 0;
#X connect 220 0 41 0;
#X connect 220 0 40 0;
#X connect 222 0 209 0;
#X connect 223 0 158 0;
#X connect 224 0 225 0;
#X connect 226 0 158 1;
#X connect 227 0 158 1;
#X connect 228 0 225 1;
#X connect 229 0 225 1;
#X connect 230 0 159 1;
#X connect 233 0 231 1;
#X connect 234 0 231 2;
#X connect 235 0 252 0;
#X connect 235 1 253 0;
#X connect 235 2 238 0;
#X connect 235 3 239 0;
#X connect 235 4 240 0;
#X connect 235 5 241 0;
#X connect 235 6 242 0;
#X connect 235 7 243 0;
#X connect 235 8 244 0;
#X connect 235 9 245 0;
#X connect 236 0 235 0;
#X connect 238 0 285 0;
#X connect 239 0 284 0;
#X connect 240 0 282 0;
#X connect 241 0 277 0;
#X connect 242 0 278 0;
#X connect 243 0 281 0;
#X connect 244 0 279 0;
#X connect 245 0 280 0;
#X connect 246 0 291 0;
#X connect 246 0 276 0;
#X connect 247 0 248 0;
#X connect 248 0 233 0;
#X connect 249 1 254 0;
#X connect 250 0 234 0;
#X connect 251 0 234 0;
#X connect 252 0 249 0;
#X connect 252 1 250 0;
#X connect 252 1 261 0;
#X connect 253 0 249 0;
#X connect 253 1 251 0;
#X connect 253 1 262 0;
#X connect 254 0 231 0;
#X connect 254 0 258 0;
#X connect 255 0 256 0;
#X connect 255 1 234 0;
#X connect 256 1 257 0;
#X connect 257 0 231 0;
#X connect 257 0 258 0;
#X connect 260 0 268 0;
#X connect 261 0 260 0;
#X connect 262 0 260 0;
#X connect 263 0 260 0;
#X connect 264 0 260 0;
#X connect 265 0 260 0;
#X connect 266 0 260 0;
#X connect 267 0 260 0;
#X connect 268 0 259 0;
#X connect 268 0 274 0;
#X connect 269 0 260 0;
#X connect 270 0 260 0;
#X connect 271 0 260 0;
#X connect 272 0 268 0;
#X connect 273 0 275 0;
#X connect 274 0 275 0;
#X connect 274 0 276 0;
#X connect 274 1 273 0;
#X connect 274 1 246 0;
#X connect 275 0 272 0;
#X connect 276 0 232 0;
#X connect 276 0 291 0;
#X connect 277 0 255 0;
#X connect 277 1 266 0;
#X connect 278 0 255 0;
#X connect 278 1 270 0;
#X connect 279 0 255 0;
#X connect 279 1 269 0;
#X connect 280 0 255 0;
#X connect 280 1 271 0;
#X connect 281 0 255 0;
#X connect 281 1 267 0;
#X connect 282 0 255 0;
#X connect 282 1 265 0;
#X connect 284 0 255 0;
#X connect 284 1 264 0;
#X connect 285 0 255 0;
#X connect 285 1 263 0;
#X connect 286 0 289 0;
#X connect 287 0 288 0;
#X connect 288 0 286 1;
#X connect 289 0 14 0;
#X connect 290 0 198 0;
#X connect 291 0 237 0;
#X connect 291 0 294 0;
#X connect 292 0 187 0;
#X connect 293 0 187 0;
#X connect 295 0 191 0;
#X connect 296 0 219 0;
#X connect 301 0 303 1;
#X connect 302 0 311 0;
#X connect 303 0 304 0;
#X connect 305 0 307 1;
#X connect 306 0 308 1;
#X connect 307 0 309 0;
#X connect 308 0 310 0;
#X connect 311 0 308 0;
#X connect 311 0 307 0;
#X connect 311 0 303 0;
#X connect 312 0 313 0;
#X connect 313 0 311 0;
