#N canvas 1440 28 1600 840 12;
#X obj 201 138 r t.interrupt;
#X obj 202 180 onebang;
#X obj 305 140 r t.load;
#X msg 200 245 252;
#X msg 156 245 250;
#X obj 187 295 f;
#X obj 146 203 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 120 165 r t.beat1;
#X obj 185 344 gate 0;
#X obj 66 296 r tin.toggle;
#X obj 148 398 gate 1;
#X obj 307 341 tgl 20 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 293 306 0;
#X msg 333 296 1;
#X obj 342 244 r s.first_rep;
#X obj 285 204 r s.md_pgm_change;
#X obj 288 243 change;
#X obj 292 278 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 137 448 midiout 2;
#X obj 231 435 sel 250;
#X msg 305 532 0;
#X obj 367 671 s tin.toggle;
#X obj 529 331 r s.last_rep;
#X obj 427 359 r ctl.tin;
#X obj 432 392 bng 20 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X msg 435 424 stop;
#X obj 392 468 onebang;
#X obj 371 424 sel 250;
#X obj 513 428 onebang;
#X obj 564 361 r s.seg_tin;
#X obj 559 393 sel 1;
#X obj 314 466 r t.stop;
#X obj 614 537 gate 1;
#X obj 563 500 == 0;
#X obj 561 464 r s.hold;
#X msg 177 536 0;
#X obj 175 489 r s.reset;
#X obj 179 565 s s.hold;
#X msg 647 501 1;
#X obj 521 539 r s.seg_tin;
#X obj 558 584 gate 0;
#X obj 463 590 r ctl.tin;
#X text 623 565 activate tin for the last rep \, ONLY if hold is off & we receive tin=1 from segment data [r s.seg_tin]. or just activate tin from ctl manually., f 26;
#X text 357 487 once 250 is sent \, turn off tin again \, only if tin=1 \, it's the last rep \, and we haven't touched the manual tin ctl, f 22;
#X text 442 164 don't let transport messages through to md/mnm if pgm change is occurring. turn back on at the start of next segment. this is because of a bug that overwhelms MCL if you do transport & pgm at the same time., f 31;
#X text 176 67 tin: send stop signal to md/mnm just before next rep to fix desync or interrupt mismatching scale length patterns, f 32;
#X obj 65 492 s tin.tinning;
#X obj 72 447 sel 250;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 8 1;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 10 1;
#X connect 8 0 27 0;
#X connect 9 0 8 0;
#X connect 10 0 18 0;
#X connect 10 0 19 0;
#X connect 10 0 47 0;
#X connect 11 0 10 0;
#X connect 12 0 11 0;
#X connect 13 0 11 0;
#X connect 14 0 13 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 12 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 22 0 28 0;
#X connect 22 0 38 0;
#X connect 23 0 24 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 20 0;
#X connect 27 0 26 0;
#X connect 28 0 26 1;
#X connect 29 0 30 0;
#X connect 30 0 28 1;
#X connect 31 0 20 0;
#X connect 32 0 40 1;
#X connect 33 0 32 0;
#X connect 34 0 33 0;
#X connect 35 0 37 0;
#X connect 36 0 35 0;
#X connect 36 0 20 0;
#X connect 38 0 32 1;
#X connect 39 0 40 0;
#X connect 40 0 21 0;
#X connect 41 0 21 0;
#X connect 47 0 46 0;
